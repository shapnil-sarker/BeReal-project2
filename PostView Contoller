import UIKit
import Parse
class PostListViewController: UIViewController {
    @IBOutlet weak var tableView: UITableView!{
        didSet{
            tableView.delegate = self
            tableView.dataSource = self
            tableView.register(UINib(nibName: "TableViewCell", bundle: nil), forCellReuseIdentifier: "cell")
        }
    }
    var photoEntries = [PFObject]()
    let refreshControl = UIRefreshControl()

    override func viewDidLoad() {
        super.viewDidLoad()
        self.tableView.rowHeight = UITableView.automaticDimension
        self.tableView.estimatedRowHeight = 44.0
        
        refreshControl.tintColor = .white
        refreshControl.addTarget(self, action: #selector(fetchPhotoEntries), for: .valueChanged)
        tableView.refreshControl = refreshControl
        fetchPhotoEntries()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.navigationBar.isHidden = false
    }
    
    @IBAction func logoutUser(_ sender: Any) {
        UserDefaults.standard.removeObject(forKey: "username")
        let vc: LoginViewController = storyboard?.instantiateViewController(withIdentifier:  "LoginViewController") as! LoginViewController
        self.navigationController?.pushViewController(vc, animated: false)
    }
    
    @objc func fetchPhotoEntries() {
        let query = PFQuery(className: "Post")
        query.order(byDescending: "createdAt")
        query.findObjectsInBackground { (objects, error) in
            self.tableView.refreshControl?.endRefreshing()
            if let error = error {
                print("Error fetching photo entries: \(error.localizedDescription)")
            } else if let objects = objects {
                self.photoEntries = objects
                self.tableView.reloadData()
            }
        }
    }
}

extension PostListViewController: UITableViewDelegate, UITableViewDataSource{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return photoEntries.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath) as! TableViewCell
        
        let photoEntry = photoEntries[indexPath.row]        
        if let timestamp = photoEntry["timestamp"] as? Date, let address = photoEntry["address"] as? String {
           
            let date = timestamp.timeAgoDisplay()
            cell.timeLabel.text = "\(address), \(date)"
        }
        
        if let imageFile = photoEntry["imageFile"] as? PFFileObject {
            imageFile.getDataInBackground { (data, error) in
                if let data = data, let image = UIImage(data: data) {
                    cell.imgView?.image = image
                }
            }
        }
        if let caption = photoEntry["caption"] as? String {
            cell.captionLbl.text = caption
        }
        if let user = photoEntry["user"] as? String {
            cell.nameLabel.text = user
        }
        return cell
    }
}
